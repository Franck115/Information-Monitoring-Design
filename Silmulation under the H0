###### Under the null hypothesis#####

##Franck Ngangom
## Last modified on 30/11/2023


#####Exploring the data#####

#loading the data from the speff2trial
library(speff2trial)
##loading required pqckqges
library(parallel)
library(sandwich)
library(lmtest)
library(ggplot2)
library(gridExtra)

data <- ACTG175
head(data)
str(data)

# data<-within(data,{
#   gender<-factor(gender,labels = c("female" ,"male"))
#   race<-factor(race,labels = c("white" ,"non_white"))
#   hemo<-factor(hemo, labels = c("no","yes"))
#   homo<-factor(homo, labels = c("no","yes"))
#   drugs<-factor(drugs, labels = c("no","yes"))
#   oprior<-factor(oprior, labels = c("no","yes"))
#   z30<-factor(z30, labels = c("no","yes"))
#   data$zprior<-factor(data$zprior,labels = c("yes"))
#   str2<-factor(str2, labels = c("naive","experienced"))
#   symptom<-factor(symptom, labels = c("asymptomatic","symptomatic"))
#   treat<-factor(treat, labels = c("zidovudine only","other therapies"))
#   arms<-factor(arms, labels = c("zidovudine","idovudine and didanosine","zidovudine and zalcitabine","didanosine"))
# })


##Baseline demographics
#demo<-table1( ~ age + wtkg + hemo + homo + drugs+oprior+z30+zprior+race+symptom +gender | arms, 
#data = data)

## print(xtable(demo2, type='latex'))

##summary statistics of the baseline outcomes
#demo2<-table1( ~ cd80 + cd40 | arms, data = data)

## removing non baseline covariates
data <-subset(data,select = c(-cd496,-cd820, -pidnum,-r,-arms,-days, -cens,-offtrt, -oprior))


## Simulations
n <- nrow(data)
set.seed(1234)
n_sim <- 1000     # Number of simulations


# Create an empty list to store the output
output <- as.list(replicate(2000, data.frame(Unadj_Variance = numeric(0), Unadj_Estimate= numeric(0), Unblinded_Unadj_Var=numeric(0),Blinded_Unadj_Var=numeric(0), 
                                             Blinded_Unadj_Var_Tim_Friede=numeric(0),STD_Estimate=numeric(0),STD_Variance=numeric(0),
                                            Adj_Variance =numeric(0), Blinded_Adj_Var=numeric(0)), simplify = FALSE))

#####Simulation#####
# Perform 1000 simulations
for (i in 1:1000) {
  n1 <- 30
  set.seed(i)
  #Randomly selecting n observations (return the index of these obs)
  index <- sample(n, n, replace = TRUE)
  
  # Sample from the original dataset with replacement
  data <- data[index, ]
  
  #creating a new variable 'trt' with equal probabilities of control and treatment
  data$trt <- rbinom(n, 1, 0.5)
  
  while (n1 <= 2000) {
    
    interimdata <- data[1:n1, ]
    model <- lm(cd420~ trt, data = interimdata)
    Unadj_Estimate <- coefficients(model)[2] # retrieving the estimate
    Unadj_Variance <- coeftest(model, vcov = vcovHC(model))[2, 2]^2
    
    ### calculating Unblinded unadjusted  variance
    Unblinded_Unadj_Var <- var(interimdata$trt * interimdata$cd420/ mean(interimdata$trt) -
                                (1 - interimdata$trt) / (1 - mean(interimdata$trt)) * interimdata$cd420-
                                (interimdata$trt / mean(interimdata$trt) * mean(interimdata$cd420[interimdata$trt == 1]) -
                                   (1 - interimdata$trt) / (1 - mean(interimdata$trt)) * mean(interimdata$cd420[interimdata$trt == 0]))) / n1
    
    ### calculating Blinded unadjusted  variance
    Blinded_Unadj_Var <- 1 / ((1 - mean(interimdata$trt)) * mean(interimdata$trt)) * var(interimdata$cd420- mean(interimdata$cd420)) / n1
    
    ### Calculating the Blinded  unadjusted  variance  (Tim Friede)
    Blinded_Unadj_Var_Tim_Friede <- sum((interimdata$cd420- mean(interimdata$cd420))^2) / (n1 - 1) * 2 / (n1 / 2)
    
    ## fitting a model with baseline covariates
    model1s <- lm(cd420~ trt+age + wtkg + hemo + homo + drugs+z30 + karnof +race + gender+cd40 + cd80, data = interimdata)
    
    Adj_estimate <- coefficients(model1s)[2]
    Adj_Variance <- (coeftest(model1s, vcov = vcovHC(model1s))[2, 2])^2
    
    
    # Adjusing baseline covariates: standardization method
    ## create prediction for all observations from the treated model
    sim_1 <- subset(interimdata, select = c(trt,age, wtkg,hemo,homo,drugs,z30,karnof ,race,gender,cd40,cd80))
    sim_1$trt <-1
    predicted1<-predict(model1s,type="response", newdata=sim_1) 
    
    ## create prediction for all observations from the control model
    sim_0 <- subset(interimdata, select = c(trt,age, wtkg,hemo,homo,drugs,z30,karnof ,race,gender,cd40,cd80))
    sim_0$trt <- 0
    predicted2 <-predict(model1s, type="response", newdata=sim_0) 
    
    STD_Estimate<- mean(predicted1)-mean(predicted2)
    
    ### calculating unblinded adjusted  variance
    STD_Variance<- mean(((interimdata$trt==1)/mean(interimdata$trt==1)*(interimdata$cd420-predicted1)+ predicted1 -
                           ((interimdata$trt==0)/mean(interimdata$trt==0)*(interimdata$cd420-predicted2)+ predicted2) -
                           (mean(predicted1)-mean(predicted2)))^2)/n1
    
    ## fitting a model with baseline covariates and blinding
    model1adj <- lm(cd420~ age + wtkg + hemo + homo + drugs+z30 + karnof +race + gender+cd40 + cd80, data = interimdata)
    
    Blinded_Adj_estimate <- coefficients(model1adj)[2]
    ### calculating blinded adjusted  variance
    Blinded_Adj_Var <- var(interimdata$cd420- predict(model1adj)) / (mean(interimdata$trt) * (1 - mean(interimdata$trt))) / n1
    
    # Store the standard errors in the output list
    output[[n1]][i, "Unadj_Variance"] <- Unadj_Variance
    output[[n1]][i, "Unblinded_Unadj_Var"] <- Unblinded_Unadj_Var 
    output[[n1]][i, "Blinded_Unadj_Var"] <- Blinded_Unadj_Var
    output[[n1]][i, "Blinded_Unadj_Var_Tim_Friede"] <- Blinded_Unadj_Var_Tim_Friede
    output[[n1]][i, "Adj_Variance"] <- Adj_Variance
    output[[n1]][i, "Blinded_Adj_Var"] <- Blinded_Adj_Var
    output[[n1]][i, "STD_Variance"]<-STD_Variance
    output[[n1]][i, "Unadj_Estimate"] <-Unadj_Estimate
    output[[n1]][i, "Adj_Estimate"] <- Adj_estimate
    output[[n1]][i, "STD_Estimate"]<-STD_Estimate
    output[[n1]][i, "Blinded_Adj_estimate"]<-Blinded_Adj_estimate
    
    # Increment the sample size by 10
    n1 <- n1 + 10
    
 
  }
}



# Calculate the mean standard errors
mean_errors <- t(sapply(output, function(df) {
  data.frame(mean_Unadj_Variance = mean(df$Unadj_Variance,na.rm=TRUE),
             mean_Adj_Variance = mean(df$Adj_Variance, na.rm=TRUE),
             mean_Unblinded_Unadj_Var = mean(df$Unblinded_Unadj_Var,na.rm=TRUE),
             mean_Blinded_Unadj_Var = mean(df$Blinded_Unadj_Var,na.rm=TRUE),
             mean_Blinded_Unadj_Var_Tim_Friede = mean(df$Blinded_Unadj_Var_Tim_Friede,na.rm=TRUE),
             mean_Blinded_Adj_Var = mean(df$Blinded_Adj_Var,na.rm=TRUE),
             mean_STD_Variance=mean(df$STD_Variance,na.rm=TRUE))
}))


mean_errors<-as.data.frame(mean_errors)

mean_errors<-mean_errors[seq(50, 2000, by = 10),]

# saving the ouptut
save(output, file = "null_output.RData")
save(mean_errors, file = "null_mean_errors.RData")


