####information####
##Franck 
## Last modified on 30/11/2023


## From Kelly and Tsiatsis2006 formula to calculate information
tot_information<-((qnorm(0.025)+qnorm(0.1))/outcome_difference)^2 ##3.9431 

## sample size calculation

total_n<-2*(qnorm(0.025)+qnorm(0.1))^2*(17150.93+21632.89)/49.50781^2 #332.5289


outcome_difference <-mean(expected_outcome_treatment) - mean(expected_outcome_control)

prob_treat<-mean(expected_outcome_treatment)
prob_control<-mean(expected_outcome_control)



## From Kelly and Tsiatsis2006 formula to calculate information
tot_information<-(qnorm(0.025)+qnorm(0.1))^2/outcome_difference^2 ## 0.004286953


result <- as.list(replicate(2000, data.frame(Variance = numeric(0), Estimate= numeric(0), information=numeric(0),total_information=numeric(0), 
                                                       Blinded_Unadj_Var_Tim_Friede=numeric(0),STD_Estimate=numeric(0),STD_Variance=numeric(0),
                                                       Adj_Variance =numeric(0), Blinded_Adj_Var=numeric(0)), simplify = FALSE))




##calculting information using unadjusted unblinded variance
for (i in 1:1) {
  set.seed(i)
  #Randomly selecting n observations (return the index of these obs)
  index <- sample(n, 2000, replace = TRUE)
  
  # Sample from the original dataset with replacement
  interimdata <- data[index, ]
  
  interimdata$trt <- rbinom(nrow(interimdata), 1, 0.5)
  
  interimdata$outcome_treat<- rnorm(nrow(interimdata),
                                    predict(step_model_treatment,type="response", newdata =interimdata),117)
  interimdata$outcome_control<-rnorm(nrow(interimdata),
                                     predict(step_model_control,type="response", newdata =interimdata),97.33)
  
  
  interimdata$Y <- interimdata$trt*(interimdata$outcome_treat)+(1-interimdata$trt)*interimdata$outcome_control
  
  interimdata_total<- interimdata
  n1 <- 50
  inf_Unblinded_Unadj_Var<-0
  while (inf_Unblinded_Unadj_Var <= tot_information) {
    
    interimdata <- interimdata_total[1:n1, ]
    model <- lm(Y~ trt, data = interimdata)
    Estimate <- coefficients(model)[2]
    Unblinded_Unadj_Var <- var(interimdata$trt * interimdata$Y/ mean(interimdata$trt) -
                                 (1 - interimdata$trt) / (1 - mean(interimdata$trt)) * interimdata$Y-
                                 (interimdata$trt / mean(interimdata$trt) * mean(interimdata$Y[interimdata$trt == 1]) -
                                    (1 - interimdata$trt) / (1 - mean(interimdata$trt)) * mean(interimdata$Y[interimdata$trt == 0]))) / n1
    inf_Unblinded_Unadj_Var<- 1/ Unblinded_Unadj_Var
    
    # Store the standard errors in the result list
    result[[n1]][i, "Unblinded_Unadj_information"] <- inf_Unblinded_Unadj_Var
    result[[n1]][i, "Estimate"] <-Estimate
    result[[n1]][i, "total_information"] <- tot_information
    # Increment the sample size by 1
    n1 <- n1 + 1
    
  }
}

##calculting information using unadjusted blinded variance
for (i in 1:1) {
  set.seed(i)
  #Randomly selecting n observations (return the index of these obs)
  index <- sample(n, 2000, replace = TRUE)
  
  # Sample from the original dataset with replacement
  interimdata <- data[index, ]
  
  interimdata$trt <- rbinom(nrow(interimdata), 1, 0.5)
  
  interimdata$outcome_treat<- rnorm(nrow(interimdata),
                                    predict(step_model_treatment,type="response", newdata =interimdata),117)
  interimdata$outcome_control<-rnorm(nrow(interimdata),
                                     predict(step_model_control,type="response", newdata =interimdata),97.33)
  
  
  
  
  interimdata$Y <- interimdata$trt*(interimdata$outcome_treat)+(1-interimdata$trt)*interimdata$outcome_control
  
  interimdata_total<- interimdata
  n1 <- 50
  inf_Blinded_Unadj_Var<-0
  while (inf_Blinded_Unadj_Var <= tot_information) {
    
    interimdata <- interimdata_total[1:n1, ]
    model <- lm(Y~ trt, data = interimdata)
    
    Estimate <- coefficients(model)[2]
    Variance <- coeftest(model, vcov = vcovHC(model))[2, 2]^2
    
    ### calculating blinded unadjusted  variance
    Blinded_Unadj_Var <- var(interimdata$cd420)/ ((1 - mean(interimdata$trt)) * mean(interimdata$trt) * n1)
    
    inf_Blinded_Unadj_Var<-1/ Blinded_Unadj_Var
    
    
    # Store the standard errors in the result list
    result[[n1]][i, "Blinded_Unadj_Var"] <- Blinded_Unadj_Var
    result[[n1]][i, "Blinded_Unadj_information"] <- inf_Blinded_Unadj_Var
    result[[n1]][i, "Estimate"] <-Estimate
    result[[n1]][i, "total_information"] <- tot_information
    # Increment the sample size by 1
    n1 <- n1 + 1
  }
  
}


##calculting information using adjusted unblinded variance: Standardisation
for (i in 1:1) {
  set.seed(i)
  #Randomly selecting n observations (return the index of these obs)
  index <- sample(n, 2000, replace = TRUE)
  
  # Sample from the original dataset with replacement
  interimdata <- data[index, ]
  
  interimdata$trt <- rbinom(nrow(interimdata), 1, 0.5)
  
  interimdata$outcome_treat<- rnorm(nrow(interimdata),
                                    predict(step_model_treatment,type="response", newdata =interimdata),117)
  interimdata$outcome_control<-rnorm(nrow(interimdata),
                                     predict(step_model_control,type="response", newdata =interimdata),97.33)
  
  
  interimdata$Y <- interimdata$trt*(interimdata$outcome_treat)+(1-interimdata$trt)*interimdata$outcome_control
  
  interimdata_total<- interimdata
  n1 <- 50
  inf_STD_Variance<-0 
  while (inf_STD_Variance <= tot_information) {
    
    interimdata <- interimdata_total[1:n1, ]
    
    ## Adjusted
    model1s <- lm(Y~ trt+age + wtkg + hemo + homo + drugs+z30 +gender+cd40 + cd80, data = interimdata)
    # Adjusted: standardization
    ## create prediction for all observations from the treated model
    sim_1<- interimdata
    sim_1$trt <-1
    
    
    ## create prediction for all observations from the control model
    sim_0<- interimdata
    sim_0$trt <- 0
    
    predicted1<-predict(model1s,type="response", newdata=sim_1) 
    
    predicted2 <-predict(model1s, type="response", newdata=sim_0) 
    
    STD_Estimate<- mean(predicted1)-mean(predicted2)
    
    STD_Variance<- mean(((interimdata$trt==1)/mean(interimdata$trt==1)*(interimdata$Y-predicted1)+ predicted1 -
                           ((interimdata$trt==0)/mean(interimdata$trt==0)*(interimdata$Y-predicted2)+ predicted2) -
                           (mean(predicted1)-mean(predicted2)))^2)/n1
    
    inf_STD_Variance<-1/ STD_Variance
    #model1adj <- lm(Y~ age + wtkg + hemo + homo + drugs+z30+gender+cd40 + cd80, data = interimdata)
    
    #ADJ_blinded_Variance <- var(interimdata$Y- predict(model1adj)) / (mean(interimdata$trt) * (1 - mean(interimdata$trt))) / n1
    
    
    # Store the standard errors in the result list
    result[[n1]][i, "STD_Variance"] <- STD_Variance
    result[[n1]][i, "STD_Variance_information"] <- inf_STD_Variance
    result[[n1]][i, "STD_Estimate"] <-STD_Estimate
    result[[n1]][i, "total_information"] <- tot_information
    # Increment the sample size by 1
    n1 <- n1 + 1
    
  }
  n=n1-1
  return(n)
}

##calculting information using adjusted blinded variance
for (i in 1:1) {
  set.seed(i)
  #Randomly selecting n observations (return the index of these obs)
  index <- sample(n, 2000, replace = TRUE)
  
  # Sample from the original dataset with replacement
  interimdata <- data[index, ]
  
  interimdata$trt <- rbinom(nrow(interimdata), 1, 0.5)
  
  interimdata$outcome_treat<- rnorm(nrow(interimdata),
                                    predict(step_model_treatment,type="response", newdata =interimdata),117)
  interimdata$outcome_control<-rnorm(nrow(interimdata),
                                     predict(step_model_control,type="response", newdata =interimdata),97.33)
  
  
  
  
  interimdata$Y <- interimdata$trt*(interimdata$outcome_treat)+(1-interimdata$trt)*interimdata$outcome_control
  
  interimdata_total<- interimdata
  n1 <- 50
  inf_Blinded_Adj_Var<-0
  while (inf_Blinded_Adj_Var <= tot_information) {
    
    interimdata <- interimdata_total[1:n1, ]
    
    ## fitting a model with baseline covariates and blinding
    model1adj <- lm(Y~ age + wtkg + hemo + homo + drugs+z30 + karnof +race + gender+cd40 + cd80, data = interimdata)
    
    ### calculating blinded adjusted  variance
    Blinded_Adj_Var <- var(interimdata$Y- predict(model1adj)) / (mean(interimdata$trt) * (1 - mean(interimdata$trt))*n1)
    inf_Blinded_Adj_Var<-1/ Blinded_Adj_Var
    
    
    # Store the standard errors in the result list
    result[[n1]][i, "Blinded_Adj_Var"] <- Blinded_Adj_Var
    result[[n1]][i, "Blinded_Adj_Var_information"] <- inf_Blinded_Adj_Var
    result[[n1]][i, "total_information"] <- tot_information
    # Increment the sample size by 1
    n1 <- n1 + 1
  }
}
